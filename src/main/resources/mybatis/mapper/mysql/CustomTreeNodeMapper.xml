<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.znv.fssrqs.dao.mysql.CustomTreeNodeMapper">
    <resultMap id="BaseResultMap" type="com.znv.fssrqs.entity.mysql.CustomTreeNode">
        <id column="node_id" jdbcType="VARCHAR" property="nodeId"/>
        <result column="node_name" jdbcType="VARCHAR" property="nodeName"/>
        <result column="node_kind" jdbcType="INTEGER" property="nodeKind"/>
        <result column="up_node_id" jdbcType="VARCHAR" property="upNodeId"/>
        <result column="tree_id" jdbcType="INTEGER" property="treeId"/>
    </resultMap>
    <sql id="Base_Column_List">
        node_id, node_name, node_kind, up_node_id, tree_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_fss_customtree_node
        where node_id = #{nodeId,jdbcType=VARCHAR}
    </select>
    <select id="selectByTreeId" parameterType="com.znv.fssrqs.entity.mysql.CustomTreeNode" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_fss_customtree_node t
        WHERE t.tree_id = #{treeId,jdbcType=INTEGER}
        and RIGHT(t.node_id,LENGTH(t.node_id)-LENGTH(t.tree_id)) in (select s.camera_id from t_scim_facetask s)
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from t_fss_customtree_node
        where node_id = #{nodeId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByTreeId" parameterType="java.lang.Integer">
        delete from t_fss_customtree_node
        where tree_id = #{treeId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.znv.fssrqs.entity.mysql.CustomTreeNode">
        insert into t_fss_customtree_node (node_id, node_name, node_kind,
        up_node_id, tree_id)
        values (#{nodeId,jdbcType=VARCHAR}, #{nodeName,jdbcType=VARCHAR}, #{nodeKind,jdbcType=INTEGER},
        #{upNodeId,jdbcType=VARCHAR}, #{treeId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.znv.fssrqs.entity.mysql.CustomTreeNode">
        insert into t_fss_customtree_node
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="nodeId != null">
                node_id,
            </if>
            <if test="nodeName != null">
                node_name,
            </if>
            <if test="nodeKind != null">
                node_kind,
            </if>
            <if test="upNodeId != null">
                up_node_id,
            </if>
            <if test="treeId != null">
                tree_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="nodeId != null">
                #{nodeId,jdbcType=VARCHAR},
            </if>
            <if test="nodeName != null">
                #{nodeName,jdbcType=VARCHAR},
            </if>
            <if test="nodeKind != null">
                #{nodeKind,jdbcType=INTEGER},
            </if>
            <if test="upNodeId != null">
                #{upNodeId,jdbcType=VARCHAR},
            </if>
            <if test="treeId != null">
                #{treeId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.znv.fssrqs.entity.mysql.CustomTreeNode">
        update t_fss_customtree_node
        <set>
            <if test="nodeName != null">
                node_name = #{nodeName,jdbcType=VARCHAR},
            </if>
            <if test="nodeKind != null">
                node_kind = #{nodeKind,jdbcType=INTEGER},
            </if>
            <if test="upNodeId != null">
                up_node_id = #{upNodeId,jdbcType=VARCHAR},
            </if>
            <if test="treeId != null">
                tree_id = #{treeId,jdbcType=INTEGER},
            </if>
        </set>
        where node_id = #{nodeId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.znv.fssrqs.entity.mysql.CustomTreeNode">
        update t_fss_customtree_node
        set node_name = #{nodeName,jdbcType=VARCHAR},
        node_kind = #{nodeKind,jdbcType=INTEGER},
        up_node_id = #{upNodeId,jdbcType=VARCHAR},
        tree_id = #{treeId,jdbcType=INTEGER}
        where node_id = #{nodeId,jdbcType=VARCHAR}
    </update>
    <select id="queryId" parameterType="java.lang.Integer"
            statementType="CALLABLE" resultType="int">
        {
        call up_tree_max_save(
        #{treeId,mode=IN,jdbcType=INTEGER})
        }
    </select>
    <insert id="insertBatch">
        insert into t_fss_customtree_node (node_id, node_name, node_kind,
        up_node_id, tree_id)
        values
        <foreach collection="list" item="CustomTreeNode" separator=",">
            (#{CustomTreeNode.nodeId,jdbcType=VARCHAR}, #{CustomTreeNode.nodeName,jdbcType=VARCHAR},
            #{CustomTreeNode.nodeKind,jdbcType=INTEGER},
            #{CustomTreeNode.upNodeId,jdbcType=VARCHAR}, #{CustomTreeNode.treeId,jdbcType=INTEGER})
        </foreach>
    </insert>
    <delete id="deleteBatch" parameterType="java.util.List">
        delete from t_fss_customtree_node where 1>2 or node_id in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update t_fss_customtree_node
            <set>
                node_name=#{item.nodeName},
                up_node_id=#{item.upNodeId}
            </set>
            where node_id = #{item.nodeId}
        </foreach>
    </update>
</mapper>